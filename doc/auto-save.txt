auto-save.txt                  AutoSave              *vim-auto-save* *auto-save*

================================================================================
CONTENTS                                                      *auto-save-contents*

1. Description.............................................|auto-save-description|
2. Installation...........................................|auto-save-installation|
3. Usage.........................................................|auto-save-usage|
4. Options.....................................................|auto-save-options|
    4.1. On Startup.........................................|auto-save-on_startup|
    4.2. Silent.................................................|auto-save-silent|
    4.3. Events.................................................|auto-save-events|
    4.4. Postsave Hook...................................|auto-save-postsave_hook|
    4.5. Keep Marks.........................................|auto-save-keep_marks|
    4.6. Write to All Buffers.....................|auto-save-write_to_all_buffers|
5. Contribution...........................................|auto-save-contribution|
    5.1. Development.......................................|auto-save-development|
6. License.....................................................|auto-save-license|

================================================================================
DESCRIPTION                                                *auto-save-description*

AutoSave - automatically saves changes to disk without having to use `:w`
(or any binding to it) every time a buffer has been modified or based on your
preferred events.

Inspired by the same feature in RubyMine text editor.

By default AutoSave will save every time something has been changed in normal
mode and when the user leaves insert mode. This configuration is a mix between
"save as often as possible" and "try to avoid breaking other plugins that depend
on filewrite-events".

================================================================================
INSTALLATION                                              *auto-save-installation*

Use vundle (https://github.com/gmarik/vundle) or
download packaged version (http://www.vim.org/scripts/script.php?script_id=4521)
from vim.org.

================================================================================
USAGE                                                            *auto-save-usage*

AutoSave is disabled by default, run `:AutoSaveToggle` to enable/disable it.

================================================================================
OPTIONS                                                        *auto-save-options*

--------------------------------------------------------------------------------
ON STARTUP                                                  *auto-save-on_startup*

If you want the plugin to be enabled on startup use the `g:auto_save` option.
>
    " .vimrc
    let g:auto_save = 1  " enable AutoSave on Vim startup
<

--------------------------------------------------------------------------------
SILENT                                                          *auto-save-silent*

AutoSave will display on the status line on each auto-save by default.
>
    (AutoSaved at 08:40:55)
<

You can silence the display with the `g:auto_save_silent` option:
>
    " .vimrc
    let g:auto_save_silent = 1  " do not display the auto-save notification
<

--------------------------------------------------------------------------------
EVENTS                                                          *auto-save-events*

The events on which AutoSave will perform a save can be adjusted using the
`g:auto_save_events` option. Using `InsertLeave` and `TextChanged` only,
the default, will save on every change in normal mode and every time you leave insert mode.
>
    let g:auto_save_events = ["InsertLeave", "TextChanged"]
<

Using `CursorHold` will additionally save every amount of milliseconds as
defined in the `updatetime` option in normal mode. `CursorHoldI` will do the
same thing in insert mode. `CompleteDone` will also trigger a save after every
completion event. See the autocommands overview for a complete listing
().

Be advised to be careful with the `updatetime` option since it has shown to
cause problems when set too small. 200 seems already to be too small to work
with certain other plugins. Use 1000 for a more conservative setting.
>
    ".vimrc
    let updatetime=200
    let g:auto_save_events = [ "CursorHold", "CursorHoldI", "CompleteDone", "InsertLeave" ]
<

--------------------------------------------------------------------------------
POSTSAVE HOOK                                            *auto-save-postsave_hook*

If you need an autosave hook (such as generating tags post-save) then use
`g:auto_save_postsave_hook` option:
>
    " .vimrc
    let g:auto_save_postsave_hook = 'TagsGenerate'  " this will run :TagsGenerate
                                                    " after each save
<

--------------------------------------------------------------------------------
KEEP MARKS                                                  *auto-save-keep_marks*

The `g:auto_save_keep_marks` option preserves marks that are used to remember start
and end position of the last changed or yanked text ().
This also fixes the behavior for common mappings that depend on these marks,
like the selecting your pasted text (http://vim.wikia.com/wiki/Selecting_your_pasted_text)
mapping.
This options default value is `1`. Without it, the mapping will select the
whole buffer, because a write operation sets the `'[` and `']` marks
respectively to the start and end of the buffer. If you
want vims default behavior, set the options value to 0:
>
    let g:auto_save_keep_marks = 0 " Don't keep the '[ and '] marks. It will break
                                   " the selecting your pasted text mapping:
                                   " http://vim.wikia.com/wiki/Selecting_your_pasted_text
<

--------------------------------------------------------------------------------
WRITE TO ALL BUFFERS                              *auto-save-write_to_all_buffers*

By default only the current buffer is written (like `:w`). You can choose that
all buffers are written on autosave using the `g:auto_save_write_all_buffers`
option (like `:wa`).
>
    let g:auto_save_write_all_buffers = 1 " Setting this option to 1 will write all
                                          " open buffers as if you would use
                                          " :wa on the vim command line.
<

================================================================================
CONTRIBUTION                                              *auto-save-contribution*

Development is made in 907th/vim-auto-save (https://github.com/907th/vim-auto-save) repo.
Feel free to contribute!

--------------------------------------------------------------------------------
DEVELOPMENT                                                *auto-save-development*

The `doc/auto-save.txt` is a converted version of the `README.md`. Don't edit
it directly. Instead install the md2vim (https://github.com/FooSoft/md2vim) and
run the `update_doc_from_readme.sh` script.

================================================================================
LICENSE                                                        *auto-save-license*

Distributed under the MIT License (see LICENSE.txt).

Copyright (c) 2013-2015 Alexey Chernenkov

